const fs=require("fs");const{exec}=require("child_process");const{css,help,tailwindConfig,tailwindInput,GeneratorHtml}=require("./exports");const packge=require('../package.json');let bootstrap=false;let tailwind=false;let alpine=false;function create(options){fs.mkdirSync("images",function(err){if(err){console.log("Zmat-cli: Error")}console.log('create images ...')});fs.mkdirSync("fonts",function(err){if(err){console.log("Zmat-cli: Error")}console.log('create fonts ...')});fs.mkdirSync("js",function(err){if(err){console.log("Zmat-cli: Error")}console.log('create js ...')});fs.writeFile('./js/script.js','/* created by zmat-cli */',function(err){if(err){console.log("Zmat-cli: Error")}console.log('create script.js ...')});fs.mkdirSync("css",function(err){if(err){console.log("Zmat-cli: Error")}console.log('create css')});fs.writeFile('./css/style.css',css,function(err){if(err){console.log("Zmat-cli: Error")}console.log('create style.css')});fs.writeFile('./index.html',GeneratorHtml(options),function(err){if(err){console.log("Zmat-cli: Error")}console.log('create index.html and link files')})}function cli(args){switch(args[0]){case "cdn":args.forEach(arg=>{switch(arg){case "-site":case "--create-site":create({tailwind:tailwind,bootstrap:bootstrap,alpine:alpine});break;case "-b":case "--bootstrap":bootstrap=true;break;case "-t":case "--tailwind":tailwind=true;break;case "-a":case "--alpine":alpine=true;break}});break;default:args.forEach(arg=>{switch(arg){case "-site":case "--create-site":create({});break;case "-v":case "--version":console.log("Zmat-cli: "+packge.version+" Version");break;case "-h":case "--hlep":console.log(help);break;case "-t":case "--tailwind":fs.writeFile('./tailwind.config.js',tailwindConfig,function(err){if(err){console.log("Zmat-cli: Error")}console.log('configure tailwind')});fs.writeFile('./css/input.css',tailwindInput,function(err){if(err){console.log(err)}});exec("npm i -D tailwindcss",(e,f)=>{if(e){console.log("error install")}else if(f){console.log("zmat-cli: install tailwind");console.log("\x1b[32m","** Every Thing Ready For You @zmat-cli ** \n","\x1b[32m");console.log("\x1b[36m","\n Tailwind Listen To You... \n","\x1b[36m")}});exec("npx tailwindcss -i ./css/input.css -o ./css/style.css --watch",(error,stdout)=>{if(error){console.log(`zmat-cli: ${error.message }`);return}console.log(`zmat-cli: ${ stdout }`)});break;default:console.log(help);break}});return}}exports.cli=cli